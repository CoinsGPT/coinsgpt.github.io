"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["95756"],{91014:function(n,e,t){t.r(e),t.d(e,{frontMatter:()=>o,default:()=>h,contentTitle:()=>r,assets:()=>a,toc:()=>l,metadata:()=>i});var i=JSON.parse('{"id":"bitcoin/bitcoin-data-verfication","title":"06 Bitcoin Data Verification","description":"To verify that Bitcoin block and transaction data is complete in ClickHouse, you need to ensure:","source":"@site/docs/bitcoin/bitcoin-data-verfication.md","sourceDirName":"bitcoin","slug":"/bitcoin/bitcoin-data-verfication","permalink":"/docs/next/bitcoin/bitcoin-data-verfication","draft":false,"unlisted":false,"editUrl":"https://github.com/coinsgpt/coinsgpt.github.io/edit/main/website/docs/bitcoin/bitcoin-data-verfication.md","tags":[],"version":"current","lastUpdatedBy":"thebestornothing","lastUpdatedAt":1748582758000,"frontMatter":{},"sidebar":"bitcoin","previous":{"title":"05 Kafka Table Engine","permalink":"/docs/next/bitcoin/kafka-table-engine"},"next":{"title":"07 Import Bitcoin into Tigergraph","permalink":"/docs/next/bitcoin/bitcoin-tigergraph"}}'),c=t(85893),s=t(80980);let o={},r="06 Bitcoin Data Verification",a={},l=[{value:"1. block height continuity",id:"1-block-height-continuity",level:2},{value:"3. transaction consistency per block",id:"3-transaction-consistency-per-block",level:2},{value:"4. duplicate transactions",id:"4-duplicate-transactions",level:2},{value:"5. block range coverage",id:"5-block-range-coverage",level:2}];function d(n){let e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"06-bitcoin-data-verification",children:"06 Bitcoin Data Verification"})}),"\n",(0,c.jsxs)(e.p,{children:["To ",(0,c.jsx)(e.strong,{children:"verify that Bitcoin block and transaction data is complete in ClickHouse"}),", you need to ensure:"]}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.strong,{children:"No missing blocks"})}),"\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.strong,{children:"No missing transactions"})}),"\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.strong,{children:"No duplicate block heights"})}),"\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.strong,{children:"Transaction counts match block metadata"})}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"1-block-height-continuity",children:"1. block height continuity"}),"\n",(0,c.jsx)(e.p,{children:"Run this to detect missing block numbers:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"WITH seq AS (\n    SELECT number\n    FROM numbers(\n        toUInt64(\n            ifNull((SELECT max(number) FROM blocks), 0) + 1\n        )\n    )\n)\nSELECT seq.number AS missing_block_number\nFROM seq\nLEFT JOIN blocks AS b ON seq.number = b.number\nWHERE b.number != seq.number\n\nIf this query returns rows, those block numbers are missing.\n\n\n## **2. Check for duplicate blocks**\n\nCheck for duplicate block numbers (heights):\n\n```sql\nSELECT number, count() AS cnt\nFROM blocks\nGROUP BY number\nHAVING cnt > 1\n"})}),"\n",(0,c.jsxs)(e.p,{children:["You should see ",(0,c.jsx)(e.strong,{children:"zero rows"})," returned."]}),"\n",(0,c.jsx)(e.p,{children:"if the count of one block is bigger than 1, please use final command to deduplicate the same rows"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-shell",children:"OPTIMIZE TABLE blocks FINAL;\n"})}),"\n",(0,c.jsx)(e.h2,{id:"3-transaction-consistency-per-block",children:"3. transaction consistency per block"}),"\n",(0,c.jsxs)(e.p,{children:["If your ",(0,c.jsx)(e.code,{children:"blocks"})," table has a ",(0,c.jsx)(e.code,{children:"transaction_count"})," field, compare it to actual transaction counts:"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"SELECT\n    b.number,\n    b.hash,\n    b.transaction_count AS expected_count,\n    count(t.hash) AS actual_count\nFROM blocks b\nLEFT JOIN transactions t ON b.hash = t.block_hash\nGROUP BY b.number, b.hash, b.transaction_count\nHAVING expected_count != actual_count\n"})}),"\n",(0,c.jsxs)(e.p,{children:["This checks if the number of transactions recorded in each block matches what\u2019s stored in the ",(0,c.jsx)(e.code,{children:"transactions"})," table."]}),"\n",(0,c.jsx)(e.h2,{id:"4-duplicate-transactions",children:"4. duplicate transactions"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"SELECT hash, count() AS cnt\nFROM transactions\nGROUP BY hash\nHAVING cnt > 1\n"})}),"\n",(0,c.jsx)(e.p,{children:"Again, this should return no rows."}),"\n",(0,c.jsx)(e.h2,{id:"5-block-range-coverage",children:"5. block range coverage"}),"\n",(0,c.jsx)(e.p,{children:"Ensure your data starts from the genesis block (height = 0):"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-sql",children:"SELECT min(number), max(number), count() FROM blocks\n"})}),"\n",(0,c.jsx)(e.p,{children:"Expected:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.code,{children:"min(number) = 0"})}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"max(number)"})," equals the current block height in the full node"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"count()"})," equals ",(0,c.jsx)(e.code,{children:"max - min + 1"})]}),"\n"]})]})}function h(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(d,{...n})}):d(n)}},80980:function(n,e,t){t.d(e,{Z:()=>r,a:()=>o});var i=t(67294);let c={},s=i.createContext(c);function o(n){let e=i.useContext(s);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);