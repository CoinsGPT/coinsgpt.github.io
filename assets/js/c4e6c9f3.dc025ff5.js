"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["80118"],{66798:function(n,e,i){i.r(e),i.d(e,{frontMatter:()=>c,default:()=>h,contentTitle:()=>a,assets:()=>o,toc:()=>l,metadata:()=>t});var t=JSON.parse('{"id":"bitcoin/tigergraph-schema-design","title":"08 TigerGraph Schema for Bitcoin","description":"Vertex Definitions","source":"@site/docs/bitcoin/tigergraph-schema-design.md","sourceDirName":"bitcoin","slug":"/bitcoin/tigergraph-schema-design","permalink":"/docs/next/bitcoin/tigergraph-schema-design","draft":false,"unlisted":false,"editUrl":"https://github.com/coinsgpt/coinsgpt.github.io/edit/main/website/docs/bitcoin/tigergraph-schema-design.md","tags":[],"version":"current","lastUpdatedBy":"Gitcoins","lastUpdatedAt":1752075035000,"frontMatter":{},"sidebar":"bitcoin","previous":{"title":"07 Import Bitcoin into Tigergraph","permalink":"/docs/next/bitcoin/bitcoin-tigergraph"},"next":{"title":"09 Stream Bitcoin data to TigerGraph by Kafka","permalink":"/docs/next/bitcoin/tigergraph-kafka-loader"}}'),s=i(85893),r=i(80980);let c={},a="08 TigerGraph Schema for Bitcoin",o={},l=[{value:"Vertex Definitions",id:"vertex-definitions",level:2},{value:"Edge Definitions",id:"edge-definitions",level:2},{value:"Graph Declaration",id:"graph-declaration",level:2}];function d(n){let e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"08-tigergraph-schema-for-bitcoin",children:"08 TigerGraph Schema for Bitcoin"})}),"\n",(0,s.jsx)(e.h2,{id:"vertex-definitions",children:"Vertex Definitions"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"Block"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Represents a block in the blockchain.([Graph Database & Analytics][1])"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"CREATE VERTEX Block (\n  PRIMARY_ID hash STRING,\n  number UINT,\n  version UINT,\n  timestamp DATETIME,\n  nonce STRING,\n  bits STRING,\n  merkle_root STRING,\n  size UINT,\n  stripped_size UINT,\n  weight UINT,\n  transaction_count UINT\n)\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"Transaction"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Represents a Bitcoin transaction."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"CREATE VERTEX Transaction (\n  PRIMARY_ID hash STRING,\n  version UINT,\n  lock_time UINT,\n  size UINT,\n  virtual_size UINT,\n  input_count UINT,\n  output_count UINT,\n  input_value DOUBLE,\n  output_value DOUBLE,\n  fee DOUBLE,\n  is_coinbase BOOL\n)\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"3",children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"Output"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Represents an output from a transaction."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:'CREATE VERTEX Output (\n  PRIMARY_ID transaction_hash_index STRING, -- e.g., "txhash_0"\n  transaction_hash STRING,\n  index UINT,\n  value DOUBLE,\n  script_asm STRING,\n  script_hex STRING,\n  required_signatures UINT,\n  type STRING\n)\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"4",children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"Address"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Represents a Bitcoin address.([TigerGraph Documentation][2])"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"CREATE VERTEX Address (\n  PRIMARY_ID address STRING\n)\n"})}),"\n",(0,s.jsx)(e.h2,{id:"edge-definitions",children:"Edge Definitions"}),"\n",(0,s.jsx)(e.p,{children:"TigerGraph Edge Definitions with Relationship Comments"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"txn_block"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:'-- A Transaction is included in a Block\n-- A Block contains a Transaction\nCREATE DIRECTED EDGE txn_block ( \n  FROM Transaction,\n  TO Block\n) WITH REVERSE_EDGE="block_txn"\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"txn_output"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:'-- A Transaction generates an Output\n-- An Output is generated by a Transaction\nCREATE DIRECTED EDGE txn_output (\n  FROM Transaction,\n  TO Output\n) WITH REVERSE_EDGE="output_txn"\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"3",children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"input_txn"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:'-- An Output is used as an input by a Transaction (i.e., spent)\n-- A Transaction consumes an Output as input\nCREATE DIRECTED EDGE input_txn ( \n  FROM Output,\n  TO Transaction\n) WITH REVERSE_EDGE="txn_input"\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"4",children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"output_address"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:'-- An Output is locked to an Address (via locking script)\n-- An Address controls or owns the Output\nCREATE DIRECTED EDGE output_address ( \n  FROM Output,\n  TO Address\n) WITH REVERSE_EDGE="address_output"\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"5",children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"block_chain"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:'-- A Block links to the next Block in the blockchain\n-- A Block follows the previous Block\nCREATE DIRECTED EDGE block_chain ( \n  FROM Block,\n  TO Block\n) WITH REVERSE_EDGE="reverse_chain"\n'})}),"\n",(0,s.jsx)(e.h2,{id:"graph-declaration",children:"Graph Declaration"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"CREATE GRAPH BitcoinGraph (\n  Block,\n  Transaction,\n  Output,\n  Address,\n  txn_block,\n  txn_output,\n  input_txn,\n  output_address,\n  block_chain\n)\n"})})]})}function h(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},80980:function(n,e,i){i.d(e,{Z:()=>a,a:()=>c});var t=i(67294);let s={},r=t.createContext(s);function c(n){let e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);