"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["27441"],{56992:function(e,n,c){c.r(n),c.d(n,{frontMatter:()=>o,default:()=>d,contentTitle:()=>r,assets:()=>l,toc:()=>a,metadata:()=>s});var s=JSON.parse('{"id":"bitcoin/clickhouse-data-verfication","title":"clickhouse-data-verfication","description":"To verify that Bitcoin block and transaction data is complete in ClickHouse, you need to ensure:","source":"@site/docs/bitcoin/clickhouse-data-verfication.md","sourceDirName":"bitcoin","slug":"/bitcoin/clickhouse-data-verfication","permalink":"/docs/next/bitcoin/clickhouse-data-verfication","draft":false,"unlisted":false,"editUrl":"https://github.com/coinsgpt/coinsgpt.github.io/edit/main/website/docs/bitcoin/clickhouse-data-verfication.md","tags":[],"version":"current","lastUpdatedBy":"thebestornothing","lastUpdatedAt":1747126481000,"frontMatter":{},"sidebar":"bitcoin","previous":{"title":"Using the Kafka table engine","permalink":"/docs/next/bitcoin/kafka-table-engine"}}'),t=c(85893),i=c(80980);let o={},r=void 0,l={},a=[{value:"Step-by-step Verification Process",id:"step-by-step-verification-process",level:3},{value:"<strong>1. Check block height continuity</strong>",id:"1-check-block-height-continuity",level:4},{value:"<strong>2. Check for duplicate blocks</strong>",id:"2-check-for-duplicate-blocks",level:4},{value:"<strong>3. Check transaction consistency per block</strong>",id:"3-check-transaction-consistency-per-block",level:4},{value:"<strong>4. Check for duplicate transactions</strong>",id:"4-check-for-duplicate-transactions",level:4},{value:"<strong>5. Check block range coverage</strong>",id:"5-check-block-range-coverage",level:4}];function h(e){let n={code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["To ",(0,t.jsx)(n.strong,{children:"verify that Bitcoin block and transaction data is complete in ClickHouse"}),", you need to ensure:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"No missing blocks"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"No missing transactions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"No duplicate block heights"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Transaction counts match block metadata"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"step-by-step-verification-process",children:"Step-by-step Verification Process"}),"\n",(0,t.jsx)(n.h4,{id:"1-check-block-height-continuity",children:(0,t.jsx)(n.strong,{children:"1. Check block height continuity"})}),"\n",(0,t.jsx)(n.p,{children:"Run this to detect missing block numbers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"WITH seq AS (\n    SELECT number\n    FROM numbers(\n        toUInt64(\n            ifNull((SELECT max(number) FROM blocks), 0) + 1\n        )\n    )\n)\nSELECT seq.number AS missing_block_number\nFROM seq\nLEFT JOIN blocks AS b ON seq.number = b.number\nWHERE b.number != seq.number\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"If this query returns rows, those block numbers are missing."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"2-check-for-duplicate-blocks",children:(0,t.jsx)(n.strong,{children:"2. Check for duplicate blocks"})}),"\n",(0,t.jsx)(n.p,{children:"Check for duplicate block numbers (heights):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT number, count() AS cnt\nFROM blocks\nGROUP BY number\nHAVING cnt > 1\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You should see ",(0,t.jsx)(n.strong,{children:"zero rows"})," returned."]}),"\n",(0,t.jsx)(n.p,{children:"if the count of one block is bigger than 1, please use final command to deduplicate the same rows"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"OPTIMIZE TABLE blocks FINAL;\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"3-check-transaction-consistency-per-block",children:(0,t.jsx)(n.strong,{children:"3. Check transaction consistency per block"})}),"\n",(0,t.jsxs)(n.p,{children:["If your ",(0,t.jsx)(n.code,{children:"blocks"})," table has a ",(0,t.jsx)(n.code,{children:"transaction_count"})," field, compare it to actual transaction counts:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT\n    b.number,\n    b.hash,\n    b.transaction_count AS expected_count,\n    count(t.hash) AS actual_count\nFROM blocks b\nLEFT JOIN transactions t ON b.hash = t.block_hash\nGROUP BY b.number, b.hash, b.transaction_count\nHAVING expected_count != actual_count\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This checks if the number of transactions recorded in each block matches what\u2019s stored in the ",(0,t.jsx)(n.code,{children:"transactions"})," table."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"4-check-for-duplicate-transactions",children:(0,t.jsx)(n.strong,{children:"4. Check for duplicate transactions"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT hash, count() AS cnt\nFROM transactions\nGROUP BY hash\nHAVING cnt > 1\n"})}),"\n",(0,t.jsx)(n.p,{children:"Again, this should return no rows."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"5-check-block-range-coverage",children:(0,t.jsx)(n.strong,{children:"5. Check block range coverage"})}),"\n",(0,t.jsx)(n.p,{children:"Ensure your data starts from the genesis block (height = 0):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT min(number), max(number), count() FROM blocks\n"})}),"\n",(0,t.jsx)(n.p,{children:"Expected:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"min(number) = 0"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"max(number)"})," equals the current block height in the full node"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"count()"})," equals ",(0,t.jsx)(n.code,{children:"max - min + 1"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"Would you like a script to automate these checks in one run?"})]})}function d(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},80980:function(e,n,c){c.d(n,{Z:()=>r,a:()=>o});var s=c(67294);let t={},i=s.createContext(t);function o(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);