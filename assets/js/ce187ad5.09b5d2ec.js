"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["95756"],{91014:function(n,e,t){t.r(e),t.d(e,{frontMatter:()=>c,default:()=>h,contentTitle:()=>o,assets:()=>r,toc:()=>l,metadata:()=>i});var i=JSON.parse('{"id":"bitcoin/bitcoin-data-verfication","title":"06 Bitcoin Data Verification","description":"To verify that Bitcoin block and transaction data is complete in ClickHouse, you need to ensure:","source":"@site/docs/bitcoin/bitcoin-data-verfication.md","sourceDirName":"bitcoin","slug":"/bitcoin/bitcoin-data-verfication","permalink":"/docs/next/bitcoin/bitcoin-data-verfication","draft":false,"unlisted":false,"editUrl":"https://github.com/coinsgpt/coinsgpt.github.io/edit/main/website/docs/bitcoin/bitcoin-data-verfication.md","tags":[],"version":"current","lastUpdatedBy":"thebestornothing","lastUpdatedAt":1752511136000,"frontMatter":{},"sidebar":"bitcoin","previous":{"title":"05 ClickHouse Kafka Engine","permalink":"/docs/next/bitcoin/clickhouse-table-engine"},"next":{"title":"07 Interesting Bitcoin Data","permalink":"/docs/next/bitcoin/bitcoin-interesting-data"}}'),s=t(85893),a=t(80980);let c={},o="06 Bitcoin Data Verification",r={},l=[{value:"1. block height continuity",id:"1-block-height-continuity",level:2},{value:"2. Check for duplicate blocks",id:"2-check-for-duplicate-blocks",level:2},{value:"3.Transactions Missing",id:"3transactions-missing",level:2},{value:"4.Transactions Missing Reverse",id:"4transactions-missing-reverse",level:2},{value:"4. duplicate transactions",id:"4-duplicate-transactions",level:2},{value:"5. Python to Loop Partition by Partition",id:"5-python-to-loop-partition-by-partition",level:2}];function d(n){let e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"06-bitcoin-data-verification",children:"06 Bitcoin Data Verification"})}),"\n",(0,s.jsxs)(e.p,{children:["To ",(0,s.jsx)(e.strong,{children:"verify that Bitcoin block and transaction data is complete in ClickHouse"}),", you need to ensure:"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"No missing blocks"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"No missing transactions"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"No duplicate block heights"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Transaction counts match block metadata"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"1-block-height-continuity",children:"1. block height continuity"}),"\n",(0,s.jsx)(e.p,{children:"Run this to detect missing block numbers:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"WITH seq AS (\n    SELECT number\n    FROM numbers(\n        toUInt64(\n            ifNull((SELECT max(number) FROM blocks_fat), 0) + 1\n        )\n    )\n)\nSELECT seq.number AS missing_block_number\nFROM seq\nLEFT ANTI JOIN blocks_fat AS b ON seq.number = b.number\n"})}),"\n",(0,s.jsx)(e.p,{children:"If this query returns rows, those block numbers are missing."}),"\n",(0,s.jsx)(e.h2,{id:"2-check-for-duplicate-blocks",children:"2. Check for duplicate blocks"}),"\n",(0,s.jsx)(e.p,{children:"Check for duplicate block numbers (heights):"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT number, count() AS cnt\nFROM blocks_fat\nGROUP BY number\nHAVING cnt > 1\n"})}),"\n",(0,s.jsxs)(e.p,{children:["You should see ",(0,s.jsx)(e.strong,{children:"zero rows"})," returned."]}),"\n",(0,s.jsx)(e.p,{children:"if the count of one block is bigger than 1, please use final command to deduplicate the same rows"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-shell",children:"OPTIMIZE TABLE blocks_fat FINAL;\n"})}),"\n",(0,s.jsx)(e.h2,{id:"3transactions-missing",children:"3.Transactions Missing"}),"\n",(0,s.jsx)(e.p,{children:"To detect missing transactions from the transactions_fat table that are listed in the blocks_fat.transactions array, and process it partition by partition"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"To list all the partition in the blocks_fat table"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT DISTINCT toYYYYMM(timestamp_month) AS part\nFROM blocks_fat\nORDER BY part ASC\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsx)(e.li,{children:"To find the transactions which are missing from transactions_fat table partition by partition"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"WITH flattened AS (\n    SELECT\n        hash AS block_hash,\n        arrayJoin(transactions) AS tx_hash\n    FROM blocks_fat\n    WHERE toYYYYMM(timestamp_month) = 201304\n)\nSELECT\n    flattened.block_hash,\n    flattened.tx_hash,\n    t.hash\nFROM flattened\nLEFT JOIN (\n    SELECT hash\n    FROM transactions_fat\n    WHERE toYYYYMM(block_timestamp_month) = 201304\n) AS t\nON flattened.tx_hash = t.hash\nWHERE t.hash != flattened.tx_hash;\n"})}),"\n",(0,s.jsx)(e.p,{children:"The missing transaction examples"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Block: 364773  Missing TX: 9fdbcf0ef9d8d00f66e47917f67cc5d78aec1ac786e2abb8d2facb4e4790aad6\nBlock: 364784  Missing TX: 9c667c64fcbb484b44dcce638f69130bbf1a4dd0fbb4423f58ceff92af4219ec\nBlock: 367885  Missing TX: 30b3b19b4d14fae79b5d55516e93f7399e7eccd87403b8dc048ea4f49130595a\nBlock: 367906  Missing TX: dd6067e71c04cb62f8e5aa52ecc99b01ffcd551a52727d046a2fabb14eb39b4d\nBlock: 367904  Missing TX: 740ac533882221099e7202bbdafbb99ec589c6e74fd2fe7ca1274b46ea4f0a96\nBlock: 367899  Missing TX: f2e197a6d8d088b13afd0f99d4027da36a9413b9f3d7730ba5278132ebc950a7\nBlock: 367886  Missing TX: cf1032c2213e6faea04f1813aa6890e7f588bb378cb98e7425aec83c11d4457c\nBlock: 367877  Missing TX: 52539a56b1eb890504b775171923430f0355eb836a57134ba598170a2f8980c1\nBlock: 367911  Missing TX: 5f4d2593c859833db2e2d25c672a46e98f7f8564b991af9642a8b37e88af62bc\nBlock: 367897  Missing TX: 8dabbf51f78c1e7286866af1de403118c5ddbe57ca93b54859245916d2bf1063\nBlock: 367891  Missing TX: c9fe64681c9a12795586a3ae7c5e94b585032f67847c7f9c42e1b979a1e2959b\nBlock: 367906  Missing TX: dd6067e71c04cb62f8e5aa52ecc99b01ffcd551a52727d046a2fabb14eb39b4d\nBlock: 367904  Missing TX: 740ac533882221099e7202bbdafbb99ec589c6e74fd2fe7ca1274b46ea4f0a96\nBlock: 367899  Missing TX: f2e197a6d8d088b13afd0f99d4027da36a9413b9f3d7730ba5278132ebc950a7\nBlock: 367885  Missing TX: 30b3b19b4d14fae79b5d55516e93f7399e7eccd87403b8dc048ea4f49130595a\nBlock: 367906  Missing TX: dd6067e71c04cb62f8e5aa52ecc99b01ffcd551a52727d046a2fabb14eb39b4d\nBlock: 367904  Missing TX: 740ac533882221099e7202bbdafbb99ec589c6e74fd2fe7ca1274b46ea4f0a96\nBlock: 367899  Missing TX: f2e197a6d8d088b13afd0f99d4027da36a9413b9f3d7730ba5278132ebc950a7\nBlock: 367886  Missing TX: cf1032c2213e6faea04f1813aa6890e7f588bb378cb98e7425aec83c11d4457c\nBlock: 367877  Missing TX: 52539a56b1eb890504b775171923430f0355eb836a57134ba598170a2f8980c1\nBlock: 367911  Missing TX: 5f4d2593c859833db2e2d25c672a46e98f7f8564b991af9642a8b37e88af62bc\nBlock: 367897  Missing TX: 8dabbf51f78c1e7286866af1de403118c5ddbe57ca93b54859245916d2bf1063\nBlock: 367891  Missing TX: c9fe64681c9a12795586a3ae7c5e94b585032f67847c7f9c42e1b979a1e2959b\nBlock: 367885  Missing TX: 30b3b19b4d14fae79b5d55516e93f7399e7eccd87403b8dc048ea4f49130595a\nBlock: 367911  Missing TX: 5f4d2593c859833db2e2d25c672a46e98f7f8564b991af9642a8b37e88af62bc\nBlock: 367877  Missing TX: 52539a56b1eb890504b775171923430f0355eb836a57134ba598170a2f8980c1\nBlock: 367897  Missing TX: 8dabbf51f78c1e7286866af1de403118c5ddbe57ca93b54859245916d2bf1063\nBlock: 367891  Missing TX: c9fe64681c9a12795586a3ae7c5e94b585032f67847c7f9c42e1b979a1e2959b\nBlock: 367886  Missing TX: cf1032c2213e6faea04f1813aa6890e7f588bb378cb98e7425aec83c11d4457c\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"3",children:["\n",(0,s.jsx)(e.li,{children:"If you find there are transactions missed, please double check whether it contained in the bitcoind"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"bitcoin-cli getrawtransaction <txid> true\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"4",children:["\n",(0,s.jsx)(e.li,{children:"Apache Kafka has several key limitations and configurable constraints that impact how much data can be produced, buffered, and consumed. Here's a clear breakdown of the main types of limitations:"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Message Size Limitations"}),"\n",(0,s.jsx)(e.li,{children:"Buffering & Memory Limits"}),"\n",(0,s.jsx)(e.li,{children:"Log & Retention Limits"}),"\n",(0,s.jsx)(e.li,{children:"Consumer Fetch & Processing Limits"}),"\n",(0,s.jsx)(e.li,{children:"Connection & Network Limits"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["To ",(0,s.jsxs)(e.strong,{children:["enlarge your Kafka topic ",(0,s.jsx)(e.code,{children:"transactions"})," to support messages up to 90MB"]}),", you must:"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Update the topic"})," config (",(0,s.jsx)(e.code,{children:"max.message.bytes"}),")"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Update the broker"})," config (",(0,s.jsx)(e.code,{children:"message.max.bytes"})," and ",(0,s.jsx)(e.code,{children:"replica.fetch.max.bytes"}),")"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Update your producer"})," config (",(0,s.jsx)(e.code,{children:"max.request.size"}),", ",(0,s.jsx)(e.code,{children:"buffer.memory"}),")"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"It works after finish the first step to update the transactions topic config."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"kafka-configs.sh --bootstrap-server localhost:9092 \\\n  --entity-type topics \\\n  --entity-name transactions \\\n  --alter \\\n  --add-config max.message.bytes=94371840\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"kafka-configs.sh --bootstrap-server localhost:9092   --entity-type topics --entity-name transactions   --describe\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Dynamic configs for topic transactions are:\n  cleanup.policy=delete sensitive=false synonyms={DYNAMIC_TOPIC_CONFIG:cleanup.policy=delete, DEFAULT_CONFIG:log.cleanup.policy=delete}\n  max.message.bytes=94371840 sensitive=false synonyms={DYNAMIC_TOPIC_CONFIG:max.message.bytes=94371840, DEFAULT_CONFIG:message.max.bytes=1048588}\n  retention.bytes=1073741824 sensitive=false synonyms={DYNAMIC_TOPIC_CONFIG:retention.bytes=1073741824, DEFAULT_CONFIG:log.retention.bytes=-1}\n  retention.ms=86400000 sensitive=false synonyms={DYNAMIC_TOPIC_CONFIG:retention.ms=86400000}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"4transactions-missing-reverse",children:"4.Transactions Missing Reverse"}),"\n",(0,s.jsx)(e.p,{children:"To find transactions listed in transactions_fat that are not present in blocks_fat.transactions, partition-by-partition (month-by-month)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"WITH\n    transactions_fat_partitioned AS\n    (\n        SELECT\n            hash,\n            block_hash\n        FROM transactions_fat\n        WHERE toYYYYMM(block_timestamp_month) = 201304\n    ),\n    blocks_fat_partitioned AS\n    (\n        SELECT\n            hash AS block_hash,\n            arrayJoin(transactions) AS tx_hash\n        FROM blocks_fat\n        WHERE toYYYYMM(timestamp_month) = 201304\n    )\nSELECT\n    t.hash AS missing_transaction_hash,\n    t.block_hash AS expected_block_hash,\n    b.tx_hash\nFROM transactions_fat_partitioned AS t\nLEFT JOIN blocks_fat_partitioned AS b ON (t.hash = b.tx_hash) AND (t.block_hash = b.block_hash)\nWHERE b.tx_hash != t.hash\n"})}),"\n",(0,s.jsx)(e.h2,{id:"4-duplicate-transactions",children:"4. duplicate transactions"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"SELECT hash, count() AS cnt\nFROM transactions_fat\nGROUP BY hash\nHAVING cnt > 1\n"})}),"\n",(0,s.jsx)(e.p,{children:"Again, this should return no rows."}),"\n",(0,s.jsx)(e.h2,{id:"5-python-to-loop-partition-by-partition",children:"5. Python to Loop Partition by Partition"}),"\n",(0,s.jsxs)(e.p,{children:["Here is a ",(0,s.jsx)(e.strong,{children:"Python script"})," that:"]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Connects to ClickHouse"})," via ",(0,s.jsx)(e.code,{children:"clickhouse-connect"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Iterates over partition months"})," (you define the range)."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Runs a query per partition"})," to find transactions listed in ",(0,s.jsx)(e.code,{children:"blocks_fat"})," but ",(0,s.jsx)(e.strong,{children:"missing"})," from ",(0,s.jsx)(e.code,{children:"transactions_fat"}),"."]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"from clickhouse_connect import get_client\nfrom datetime import datetime\nfrom dateutil.relativedelta import relativedelta\n\n# === CONFIGURATION ===\nCLICKHOUSE_HOST = 'localhost'\nCLICKHOUSE_PORT = 8123\nCLICKHOUSE_USER = 'default'\nCLICKHOUSE_PASSWORD = 'password'\nDATABASE = 'bitcoin'\n\nSTART_MONTH = '2010-01'  # yyyy-mm\nEND_MONTH   = '2013-11'\n\n# === INIT CLIENT ===\nclient = get_client(\n    host=CLICKHOUSE_HOST,\n    port=CLICKHOUSE_PORT,\n    username=CLICKHOUSE_USER,\n    password=CLICKHOUSE_PASSWORD,\n    database=DATABASE,\n)\n\n# === GENERATE PARTITIONS ===\ndef generate_partitions(start, end):\n    partitions = []\n    start_date = datetime.strptime(start, '%Y-%m')\n    end_date = datetime.strptime(end, '%Y-%m')\n    current = start_date\n    while current <= end_date:\n        partitions.append(current.strftime('%Y%m'))\n        current += relativedelta(months=1)\n    return partitions\n\n# === MAIN LOOP ===\npartitions = generate_partitions(START_MONTH, END_MONTH)\n\nfor partition in partitions:\n    print(f'\\n\uD83E\uDDEA Querying Partition: {partition}')\n    query = f\"\"\"\n    WITH flattened AS (\n        SELECT\n            hash AS block_hash,\n            tx_hash\n        FROM bitcoin.blocks_fat\n        ARRAY JOIN transactions AS tx_hash\n        WHERE toYYYYMM(timestamp_month) = {partition}\n    )\n    SELECT\n        flattened.block_hash,\n        flattened.tx_hash\n    FROM flattened\n    LEFT JOIN (\n        SELECT hash\n        FROM bitcoin.transactions_fat\n        WHERE toYYYYMM(block_timestamp_month) = {partition}\n    ) AS txs\n    ON flattened.tx_hash = txs.hash\n    WHERE txs.hash != flattened.tx_hash\n    \"\"\"\n    result = client.query(query)\n    rows = result.result_rows\n    if rows:\n        print(f\"\u26A0\uFE0F  Missing transactions in partition {partition}: {len(rows)}\")\n        for row in rows:\n            print(f\"    Block: {row[0]}, Missing TX: {row[1]}\")\n    else:\n        print(f\"\u2705 All transactions found in partition {partition}\")\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"pip install clickhouse-connect python-dateutil\n"})})]})}function h(n={}){let{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},80980:function(n,e,t){t.d(e,{Z:()=>o,a:()=>c});var i=t(67294);let s={},a=i.createContext(s);function c(n){let e=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);