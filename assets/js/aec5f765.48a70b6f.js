"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["38174"],{64316:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>r,default:()=>h,contentTitle:()=>o,assets:()=>l,toc:()=>c,metadata:()=>i});var i=JSON.parse('{"id":"bitcoin/tigergraph-kafka-loader","title":"09 Stream Bitcoin data to TigerGraph by Kafka","description":"Could you please generate a professionally written blog-style guide, as if authored by a professor, explaining how to build a Kafka-based TigerGraph loader for Bitcoin data, with all real-world details and schema-complete examples.","source":"@site/docs/bitcoin/tigergraph-kafka-loader.md","sourceDirName":"bitcoin","slug":"/bitcoin/tigergraph-kafka-loader","permalink":"/docs/next/bitcoin/tigergraph-kafka-loader","draft":false,"unlisted":false,"editUrl":"https://github.com/coinsgpt/coinsgpt.github.io/edit/main/website/docs/bitcoin/tigergraph-kafka-loader.md","tags":[],"version":"current","lastUpdatedBy":"thebestornothing","lastUpdatedAt":1753947909000,"frontMatter":{}}'),t=a(85893),s=a(80980);let r={},o="09 Stream Bitcoin data to TigerGraph by Kafka",l={},c=[{value:"Goal",id:"goal",level:2},{value:"Prerequisite: Bitcoin Schema in TigerGraph",id:"prerequisite-bitcoin-schema-in-tigergraph",level:2},{value:"1: Prepare Real Kafka JSON Messages",id:"1-prepare-real-kafka-json-messages",level:2},{value:"2: Enable Kafka Support in TigerGraph",id:"2-enable-kafka-support-in-tigergraph",level:2},{value:"3: Write the GSQL Kafka Loader",id:"3-write-the-gsql-kafka-loader",level:2},{value:"4: Run the Kafka Loading Job",id:"4-run-the-kafka-loading-job",level:2},{value:"Monitoring and Troubleshooting",id:"monitoring-and-troubleshooting",level:2},{value:"Final Thoughts",id:"final-thoughts",level:2}];function d(e){let n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"09-stream-bitcoin-data-to-tigergraph-by-kafka",children:"09 Stream Bitcoin data to TigerGraph by Kafka"})}),"\n",(0,t.jsx)(n.admonition,{title:"Prompt",type:"info",children:(0,t.jsx)(n.p,{children:"Could you please generate a professionally written blog-style guide, as if authored by a professor, explaining how to build a Kafka-based TigerGraph loader for Bitcoin data, with all real-world details and schema-complete examples."})}),"\n",(0,t.jsx)(n.h2,{id:"goal",children:"Goal"}),"\n",(0,t.jsxs)(n.p,{children:["In this tutorial, I will walk you through how to ",(0,t.jsx)(n.strong,{children:"stream Bitcoin blockchain data into TigerGraph using Kafka"}),". You'll learn how to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Define a Bitcoin-specific schema in TigerGraph"}),"\n",(0,t.jsx)(n.li,{children:"Prepare realistic, complete Kafka messages"}),"\n",(0,t.jsxs)(n.li,{children:["Write a ",(0,t.jsx)(n.strong,{children:"GSQL Kafka Loading Job"})," that consumes from Kafka topics"]}),"\n",(0,t.jsxs)(n.li,{children:["Load data into ",(0,t.jsx)(n.strong,{children:"vertices"})," and ",(0,t.jsx)(n.strong,{children:"edges"})," without omitting any attributes"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisite-bitcoin-schema-in-tigergraph",children:"Prerequisite: Bitcoin Schema in TigerGraph"}),"\n",(0,t.jsxs)(n.p,{children:["We begin with a fully normalized schema that models Bitcoin\u2019s ",(0,t.jsx)(n.strong,{children:"block"}),", ",(0,t.jsx)(n.strong,{children:"transaction"}),", ",(0,t.jsx)(n.strong,{children:"output"}),", and ",(0,t.jsx)(n.strong,{children:"address"}),", along with their relationships:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Vertex Types"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gsql",children:'CREATE VERTEX Block (\n  PRIMARY_ID hash STRING,\n  number UINT,\n  version UINT,\n  timestamp DATETIME,\n  nonce STRING,\n  bits STRING,\n  merkle_root STRING,\n  size UINT,\n  stripped_size UINT,\n  weight UINT,\n  transaction_count UINT\n)\n\nCREATE VERTEX Transaction (\n  PRIMARY_ID hash STRING,\n  version UINT,\n  lock_time UINT,\n  size UINT,\n  virtual_size UINT,\n  input_count UINT,\n  output_count UINT,\n  input_value DOUBLE,\n  output_value DOUBLE,\n  fee DOUBLE,\n  is_coinbase BOOL\n)\n\nCREATE VERTEX Output (\n  PRIMARY_ID transaction_hash_index STRING,  -- "txhash_0"\n  transaction_hash STRING,\n  index UINT,\n  value DOUBLE,\n  script_asm STRING,\n  script_hex STRING,\n  required_signatures UINT,\n  type STRING\n)\n\nCREATE VERTEX Address (\n  PRIMARY_ID address STRING\n)\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Edge Types"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gsql",children:'CREATE DIRECTED EDGE txn_block (FROM Transaction, TO Block) WITH REVERSE_EDGE="block_txn"\nCREATE DIRECTED EDGE txn_output (FROM Transaction, TO Output) WITH REVERSE_EDGE="output_txn"\nCREATE DIRECTED EDGE input_txn (FROM Output, TO Transaction) WITH REVERSE_EDGE="txn_input"\nCREATE DIRECTED EDGE output_address (FROM Output, TO Address) WITH REVERSE_EDGE="address_output"\nCREATE DIRECTED EDGE block_chain (FROM Block, TO Block) WITH REVERSE_EDGE="reverse_chain"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"1-prepare-real-kafka-json-messages",children:"1: Prepare Real Kafka JSON Messages"}),"\n",(0,t.jsxs)(n.p,{children:["Kafka producers should publish ",(0,t.jsx)(n.strong,{children:"fully populated JSON"})," messages. Below are examples for each vertex and edge, based on ",(0,t.jsx)(n.strong,{children:"realistic"})," blockchain data."]}),"\n",(0,t.jsxs)(n.p,{children:["Vertex: Block (",(0,t.jsx)(n.code,{children:"block_topic"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "hash": "0000000000000000000c6f7ad43c0fa03de16b00a03b1cfeb38deaa86d73a750",\n  "number": 781456,\n  "version": 536870912,\n  "timestamp": "2023-04-30T16:12:45Z",\n  "nonce": "1937512544",\n  "bits": "1709fd7e",\n  "merkle_root": "9a4a8475e8e81b4f57c5c83348923c25c9c8d40d173b593f8c859ae5d481845f",\n  "size": 1258478,\n  "stripped_size": 882323,\n  "weight": 3993752,\n  "transaction_count": 2563\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Vertex: Transaction (",(0,t.jsx)(n.code,{children:"transaction_topic"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "hash": "2d11a4f8a39286f71c4584b708c2e73a14fa6c6a7a7ebd22df27dbf6b96dc3ad",\n  "version": 2,\n  "lock_time": 0,\n  "size": 235,\n  "virtual_size": 141,\n  "input_count": 1,\n  "output_count": 2,\n  "input_value": 0.005,\n  "output_value": 0.0048,\n  "fee": 0.0002,\n  "is_coinbase": false\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Vertex: Output (",(0,t.jsx)(n.code,{children:"output_topic"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transaction_hash_index": "2d11a4f8a39286f71c4584b708c2e73a14fa6c6a7a7ebd22df27dbf6b96dc3ad_0",\n  "transaction_hash": "2d11a4f8a39286f71c4584b708c2e73a14fa6c6a7a7ebd22df27dbf6b96dc3ad",\n  "index": 0,\n  "value": 0.0025,\n  "script_asm": "OP_DUP OP_HASH160 ab680f1e19a6bf7fc7 OP_EQUALVERIFY OP_CHECKSIG",\n  "script_hex": "76a914ab680f1e19a6bf7fc788ac",\n  "required_signatures": 1,\n  "type": "pubkeyhash"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Vertex: Address (",(0,t.jsx)(n.code,{children:"address_topic"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "address": "1PNXRAA3dYTzVRLwWG1j3ip9JKtmzvBjdY"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Edge: txn_block (",(0,t.jsx)(n.code,{children:"txn_block_topic"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "FROM": "2d11a4f8a39286f71c4584b708c2e73a14fa6c6a7a7ebd22df27dbf6b96dc3ad",\n  "TO": "0000000000000000000c6f7ad43c0fa03de16b00a03b1cfeb38deaa86d73a750"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["...and similar JSONs for ",(0,t.jsx)(n.code,{children:"txn_output_topic"}),", ",(0,t.jsx)(n.code,{children:"input_txn_topic"}),", ",(0,t.jsx)(n.code,{children:"output_address_topic"}),", and ",(0,t.jsx)(n.code,{children:"block_chain_topic"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"2-enable-kafka-support-in-tigergraph",children:"2: Enable Kafka Support in TigerGraph"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"gadmin config set KafkaLoader.Enable true\ngadmin config apply -y\ngadmin restart\n"})}),"\n",(0,t.jsx)(n.h2,{id:"3-write-the-gsql-kafka-loader",children:"3: Write the GSQL Kafka Loader"}),"\n",(0,t.jsxs)(n.p,{children:["Here\u2019s a complete ",(0,t.jsx)(n.code,{children:"GSQL"})," loading job using ",(0,t.jsx)(n.strong,{children:"Kafka-based JSON streaming"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gsql",children:'USE GRAPH BitcoinGraph\n\nBEGIN LOAD JOB kafka_bitcoin_job\n\n  USING kafka_address="localhost:9092", json_file="true"\n\n  DEFINE FILENAME block_file;\n  LOAD block_file TO VERTEX Block VALUES (\n    $"hash", $"number", $"version", $"timestamp", $"nonce",\n    $"bits", $"merkle_root", $"size", $"stripped_size", $"weight", $"transaction_count"\n  ) USING kafka_topic="block_topic";\n\n  DEFINE FILENAME txn_file;\n  LOAD txn_file TO VERTEX Transaction VALUES (\n    $"hash", $"version", $"lock_time", $"size", $"virtual_size",\n    $"input_count", $"output_count", $"input_value", $"output_value", $"fee", $"is_coinbase"\n  ) USING kafka_topic="transaction_topic";\n\n  DEFINE FILENAME output_file;\n  LOAD output_file TO VERTEX Output VALUES (\n    $"transaction_hash_index", $"transaction_hash", $"index", $"value",\n    $"script_asm", $"script_hex", $"required_signatures", $"type"\n  ) USING kafka_topic="output_topic";\n\n  DEFINE FILENAME address_file;\n  LOAD address_file TO VERTEX Address VALUES (\n    $"address"\n  ) USING kafka_topic="address_topic";\n\n  DEFINE FILENAME txn_block_file;\n  LOAD txn_block_file TO EDGE txn_block VALUES (\n    $"FROM", $"TO"\n  ) USING kafka_topic="txn_block_topic";\n\n  DEFINE FILENAME txn_output_file;\n  LOAD txn_output_file TO EDGE txn_output VALUES (\n    $"FROM", $"TO"\n  ) USING kafka_topic="txn_output_topic";\n\n  DEFINE FILENAME input_txn_file;\n  LOAD input_txn_file TO EDGE input_txn VALUES (\n    $"FROM", $"TO"\n  ) USING kafka_topic="input_txn_topic";\n\n  DEFINE FILENAME output_address_file;\n  LOAD output_address_file TO EDGE output_address VALUES (\n    $"FROM", $"TO"\n  ) USING kafka_topic="output_address_topic";\n\n  DEFINE FILENAME block_chain_file;\n  LOAD block_chain_file TO EDGE block_chain VALUES (\n    $"FROM", $"TO"\n  ) USING kafka_topic="block_chain_topic";\n\nEND\n'})}),"\n",(0,t.jsx)(n.h2,{id:"4-run-the-kafka-loading-job",children:"4: Run the Kafka Loading Job"}),"\n",(0,t.jsx)(n.p,{children:"To launch the real-time Kafka loader:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"gsql ./bitcoin_kafka_loader.gsql\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then execute:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gsql",children:'RUN LOADING JOB kafka_bitcoin_job USING\n  block_file="dummy",\n  txn_file="dummy",\n  output_file="dummy",\n  address_file="dummy",\n  txn_block_file="dummy",\n  txn_output_file="dummy",\n  input_txn_file="dummy",\n  output_address_file="dummy",\n  block_chain_file="dummy"\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u2705 TigerGraph will now consume from Kafka continuously."}),"\n",(0,t.jsx)(n.h2,{id:"monitoring-and-troubleshooting",children:"Monitoring and Troubleshooting"}),"\n",(0,t.jsx)(n.p,{children:"To monitor:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"gadmin status KafkaLoader\ntail -f /home/tigergraph/tigergraph/logs/GSQL_KAFKA_LOADER_LOG.*\n"})}),"\n",(0,t.jsx)(n.h2,{id:"final-thoughts",children:"Final Thoughts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"All attributes are preserved"}),". No simplifications."]}),"\n",(0,t.jsx)(n.li,{children:"\uD83D\uDD01 Kafka-based ingestion allows real-time analytics on UTXO graphs."}),"\n",(0,t.jsx)(n.li,{children:"\uD83E\uDDE9 TigerGraph\u2019s bidirectional edges and efficient parallel loading make it ideal for analyzing complex transaction flows."}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},80980:function(e,n,a){a.d(n,{Z:()=>o,a:()=>r});var i=a(67294);let t={},s=i.createContext(t);function r(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);