"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["11860"],{50777:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>s,default:()=>h,contentTitle:()=>r,assets:()=>l,toc:()=>d,metadata:()=>i});var i=JSON.parse('{"id":"bitcoin/bitcoin-etl","title":"Convert raw data with ETL","description":"---","source":"@site/docs/bitcoin/bitcoin-etl.md","sourceDirName":"bitcoin","slug":"/bitcoin/bitcoin-etl","permalink":"/zh-CN/docs/next/bitcoin/bitcoin-etl","draft":false,"unlisted":false,"editUrl":"https://crowdin.com/project/docusaurus-v2/zh-CN","tags":[],"version":"current","lastUpdatedBy":"thebestornothing","lastUpdatedAt":1747120773000,"frontMatter":{},"sidebar":"bitcoin","previous":{"title":"Fullnode setup","permalink":"/zh-CN/docs/next/bitcoin/bitcoin-fullnode"},"next":{"title":"Using the Kafka table engine","permalink":"/zh-CN/docs/next/bitcoin/kafka-table-engine"}}'),o=t(85893),c=t(80980);let s={},r="Convert raw data with ETL",l={},d=[{value:"\uD83D\uDD27 1. <strong>Enable Pruned Mode</strong> (to save disk space)",id:"-1-enable-pruned-mode-to-save-disk-space",level:2},{value:"Edit <code>bitcoin.conf</code>:",id:"edit-bitcoinconf",level:3},{value:"\uD83D\uDCE1 2. <strong>Enable ZMQ</strong> (for real-time block and transaction stream)",id:"-2-enable-zmq-for-real-time-block-and-transaction-stream",level:2},{value:"In <code>bitcoin.conf</code>, add:",id:"in-bitcoinconf-add",level:3},{value:"\uD83D\uDD10 3. <strong>Enable Remote RPC Access</strong> (if needed)",id:"-3-enable-remote-rpc-access-if-needed",level:2},{value:"Edit <code>bitcoin.conf</code>:",id:"edit-bitcoinconf-1",level:3},{value:"\uD83E\uDDEA 4. <strong>Test Your Setup</strong>",id:"-4-test-your-setup",level:2},{value:"\uD83D\uDCC2 Bonus: Check ZMQ Events with Python (optional)",id:"-bonus-check-zmq-events-with-python-optional",level:2}];function a(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"convert-raw-data-with-etl",children:"Convert raw data with ETL"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"-1-enable-pruned-mode-to-save-disk-space",children:["\uD83D\uDD27 1. ",(0,o.jsx)(n.strong,{children:"Enable Pruned Mode"})," (to save disk space)"]}),"\n",(0,o.jsx)(n.p,{children:"Pruned mode keeps only the latest blocks to save storage."}),"\n",(0,o.jsxs)(n.h3,{id:"edit-bitcoinconf",children:["Edit ",(0,o.jsx)(n.code,{children:"bitcoin.conf"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nano ~/.bitcoin/bitcoin.conf\n"})}),"\n",(0,o.jsx)(n.p,{children:"Add or update:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"prune=550  # Keep ~550 MB of recent blocks\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u2705 You cannot use ",(0,o.jsx)(n.code,{children:"txindex=1"})," with pruning. If you want to save space, ",(0,o.jsx)(n.strong,{children:"remove"})," ",(0,o.jsx)(n.code,{children:"txindex=1"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"-2-enable-zmq-for-real-time-block-and-transaction-stream",children:["\uD83D\uDCE1 2. ",(0,o.jsx)(n.strong,{children:"Enable ZMQ"})," (for real-time block and transaction stream)"]}),"\n",(0,o.jsx)(n.p,{children:"ZMQ allows real-time access to new transactions and blocks."}),"\n",(0,o.jsxs)(n.h3,{id:"in-bitcoinconf-add",children:["In ",(0,o.jsx)(n.code,{children:"bitcoin.conf"}),", add:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"zmqpubrawblock=tcp://127.0.0.1:28333\nzmqpubrawtx=tcp://127.0.0.1:28332\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This tells ",(0,o.jsx)(n.code,{children:"bitcoind"})," to publish:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Raw blocks to port ",(0,o.jsx)(n.code,{children:"28333"})]}),"\n",(0,o.jsxs)(n.li,{children:["Raw transactions to port ",(0,o.jsx)(n.code,{children:"28332"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You can subscribe using a Python library like ",(0,o.jsx)(n.code,{children:"pyzmq"})," or ",(0,o.jsx)(n.code,{children:"bitcoin-rpc"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"-3-enable-remote-rpc-access-if-needed",children:["\uD83D\uDD10 3. ",(0,o.jsx)(n.strong,{children:"Enable Remote RPC Access"})," (if needed)"]}),"\n",(0,o.jsxs)(n.p,{children:["If you want to connect to ",(0,o.jsx)(n.code,{children:"bitcoind"})," remotely:"]}),"\n",(0,o.jsxs)(n.h3,{id:"edit-bitcoinconf-1",children:["Edit ",(0,o.jsx)(n.code,{children:"bitcoin.conf"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"rpcbind=0.0.0.0\nrpcallowip=192.168.1.0/24    # Replace with your LAN subnet\nrpcport=8332\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u26A0\uFE0F ",(0,o.jsx)(n.strong,{children:"NEVER expose RPC to the internet without authentication and proper firewall rules."})]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h2,{id:"-4-test-your-setup",children:["\uD83E\uDDEA 4. ",(0,o.jsx)(n.strong,{children:"Test Your Setup"})]}),"\n",(0,o.jsx)(n.p,{children:"Run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"bitcoin-cli -rpcuser=bitcoinrpc -rpcpassword=strongpassword getblockchaininfo\n"})}),"\n",(0,o.jsx)(n.p,{children:"If remote, add:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"bitcoin-cli -rpcconnect=YOUR_NODE_IP -rpcport=8332 ...\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-bonus-check-zmq-events-with-python-optional",children:"\uD83D\uDCC2 Bonus: Check ZMQ Events with Python (optional)"}),"\n",(0,o.jsx)(n.p,{children:"Install Python dependencies:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install pyzmq\npip install pyzmq\n"})}),"\n",(0,o.jsx)(n.p,{children:"Test listener:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import zmq\n\ncontext = zmq.Context()\nsocket = context.socket(zmq.SUB)\nsocket.connect("tcp://127.0.0.1:28332")  # or 28333 for blocks\nsocket.setsockopt_string(zmq.SUBSCRIBE, \'\')\n\nwhile True:\n    msg = socket.recv()\n    print(f"Received: {msg.hex()}")\n'})})]})}function h(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},80980:function(e,n,t){t.d(n,{Z:()=>r,a:()=>s});var i=t(67294);let o={},c=i.createContext(o);function s(e){let n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);